{"version":3,"sources":["Particles.js","Canvas.js","App.js","index.js"],"names":["Particles","x","y","ctx","this","size","Math","random","speedX","speedY","color","hue","fillStyle","beginPath","arc","PI","stroke","fill","Canvas","props","state","mouse","undefined","particlesArray","canvas","document","querySelector","getContext","width","window","innerWidth","height","innerHeight","addEventListener","event","setState","prevState","i","push","bind","animate","clearRect","length","update","draw","j","dx","dy","sqrt","strokeStyle","lineWidth","moveTo","lineTo","splice","handleParticle","requestAnimationFrame","className","id","React","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QA+BeA,E,WA9BX,WAAYC,EAAGC,EAAGC,GAAM,oBACpBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKC,KAAuB,GAAhBC,KAAKC,SACjBH,KAAKI,OAAyB,EAAhBF,KAAKC,SAAe,IAClCH,KAAKK,OAAyB,EAAhBH,KAAKC,SAAe,IAClCH,KAAKD,IAAMA,EACXC,KAAKM,MAAL,cAAoBN,KAAKD,IAAIQ,IAA7B,c,0CAGJ,WACIP,KAAKH,GAAKG,KAAKI,OACfJ,KAAKF,GAAKE,KAAKK,OACXL,KAAKC,KAAO,KACZD,KAAKC,MAAQ,M,kBAIrB,WAGID,KAAKD,IAAIS,UAAYR,KAAKM,MAE1BN,KAAKD,IAAIU,YACTT,KAAKD,IAAIW,IAAIV,KAAKH,EAAGG,KAAKF,EAAGE,KAAKC,KAAM,EAAa,EAAVC,KAAKS,IAChDX,KAAKD,IAAIa,SACTZ,KAAKD,IAAIc,W,oBCoFFC,E,kDA1GX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,CACHpB,OAAGqB,EACHpB,OAAGoB,IALI,E,qDAUnB,WACI,IAAIC,EAAiB,GACjBC,EAASC,SAASC,cAAc,YAChCvB,EAAMqB,EAAOG,WAAW,MAC5BxB,EAAIQ,IAAM,EACVa,EAAOI,MAAQC,OAAOC,WACtBN,EAAOO,OAASF,OAAOG,YAEvBH,OAAOI,iBAAiB,UAAU,SAAUC,GACxCV,EAAOI,MAAQC,OAAOC,WACtBN,EAAOO,OAASF,OAAOG,eAG3BR,EAAOS,iBACH,QACA,SAAUC,GACN9B,KAAK+B,UAKL,SAAuBC,EAAWjB,GAC9B,MAAO,CACHE,MAAO,CACHpB,EAAGiC,EAAMjC,EACTC,EAAGgC,EAAMhC,OARrB,IAAK,IAAImC,EAAI,EAAGA,EAAI,GAAIA,IACpBd,EAAee,KAAK,IAAItC,EAAUkC,EAAMjC,EAAGiC,EAAMhC,EAAGC,KAW1DoC,KAAKnC,OAGXoB,EAAOS,iBACH,YACA,SAAUC,GACN9B,KAAK+B,UAML,SAAuBC,EAAWjB,GAC9B,MAAO,CACHE,MAAO,CACHpB,EAAGiC,EAAMjC,EACTC,EAAGgC,EAAMhC,OARjBgC,EAAMjC,EAAI,IAAM,GAAKiC,EAAMhC,EAAI,IAAM,GACrCqB,EAAee,KAAK,IAAItC,EAAUkC,EAAMjC,EAAGiC,EAAMhC,EAAGC,KAW1DoC,KAAKnC,QAGG,SAAVoC,IACArC,EAAIsC,UAAU,EAAG,EAAGjB,EAAOI,MAAOJ,EAAOO,QAS7C,WACI,IAAK,IAAIM,EAAI,EAAGA,EAAId,EAAemB,OAAQL,IAAK,CAC5Cd,EAAec,GAAGM,SAClBpB,EAAec,GAAGO,OAClBzC,EAAIQ,KAAO,GACX,IAAK,IAAIkC,EAAIR,EAAGQ,EAAItB,EAAemB,OAAQG,IAAK,CAC5C,IAAIC,EAAKvB,EAAec,GAAGpC,EAAIsB,EAAesB,GAAG5C,EAC7C8C,EAAKxB,EAAec,GAAGnC,EAAIqB,EAAesB,GAAG3C,EAClCI,KAAK0C,KAAKF,EAAKA,EAAKC,EAAKA,GACzB,MACX5C,EAAIU,YACJV,EAAI8C,YAAc1B,EAAec,GAAG3B,MACpCP,EAAI+C,UAAY3B,EAAec,GAAGhC,KAAO,GACzCF,EAAIgD,OAAO5B,EAAec,GAAGpC,EAAGsB,EAAec,GAAGnC,GAClDC,EAAIiD,OAAO7B,EAAesB,GAAG5C,EAAGsB,EAAesB,GAAG3C,GAClDC,EAAIa,UAGRO,EAAec,GAAGhC,MAAQ,KAC1BkB,EAAe8B,OAAOhB,EAAG,GACzBA,MA1BRiB,GACAC,sBAAsBf,GAG1BA,K,oBA2BJ,WACI,OACI,qBAAKgB,UAAU,SAAf,SACI,wBAAQC,GAAG,kB,GArGNC,IAAMC,WCOZC,MARf,WACI,OACI,qBAAKJ,UAAU,MAAf,SACI,cAAC,EAAD,OCDZK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJtC,SAASuC,eAAe,W","file":"static/js/main.1b549c7c.chunk.js","sourcesContent":["class Particles {\n    constructor(x, y, ctx) {\n        this.x = x;\n        this.y = y;\n        this.size = Math.random() * 18;\n        this.speedX = Math.random() * 3 - 1.5;\n        this.speedY = Math.random() * 3 - 1.5;\n        this.ctx = ctx;\n        this.color = `hsl(${this.ctx.hue},50%, 50%)`;\n    }\n\n    update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.size > 0.2) {\n            this.size -= 0.1;\n        }\n    }\n\n    draw() {\n        //this.ctx.fillStyle = \"purple\";\n        //this.ctx.fillStyle = \"white\";\n        this.ctx.fillStyle = this.color;\n        //this.ctx.lineWidth = 5;\n        this.ctx.beginPath();\n        this.ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        this.ctx.stroke();\n        this.ctx.fill();\n    }\n}\n\nexport default Particles;\n","import React from \"react\";\nimport Particles from \"./Particles\";\nimport \"./Canvas.css\";\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mouse: {\n                x: undefined,\n                y: undefined,\n            },\n        };\n    }\n\n    componentDidMount() {\n        var particlesArray = [];\n        var canvas = document.querySelector(\"#canvas1\");\n        var ctx = canvas.getContext(\"2d\");\n        ctx.hue = 0;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        window.addEventListener(\"resize\", function (event) {\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n        });\n\n        canvas.addEventListener(\n            \"click\",\n            function (event) {\n                this.setState(updatePointer);\n                for (let i = 0; i < 10; i++) {\n                    particlesArray.push(new Particles(event.x, event.y, ctx));\n                }\n\n                function updatePointer(prevState, props) {\n                    return {\n                        mouse: {\n                            x: event.x,\n                            y: event.y,\n                        },\n                    };\n                }\n            }.bind(this)\n        );\n\n        canvas.addEventListener(\n            \"mousemove\",\n            function (event) {\n                this.setState(updatePointer);\n\n                if (event.x % 2 === 0 || event.y % 2 === 0) {\n                    particlesArray.push(new Particles(event.x, event.y, ctx));\n                }\n\n                function updatePointer(prevState, props) {\n                    return {\n                        mouse: {\n                            x: event.x,\n                            y: event.y,\n                        },\n                    };\n                }\n            }.bind(this)\n        );\n\n        var animate = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            //ctx.fillStyle = \"rgba(0,0,0,0.1)\";\n            //ctx.fillRect(0, 0, canvas.width, canvas.height);\n            handleParticle();\n            requestAnimationFrame(animate);\n        };\n\n        animate();\n\n        function handleParticle() {\n            for (let i = 0; i < particlesArray.length; i++) {\n                particlesArray[i].update();\n                particlesArray[i].draw();\n                ctx.hue += 0.5;\n                for (let j = i; j < particlesArray.length; j++) {\n                    var dx = particlesArray[i].x - particlesArray[j].x;\n                    var dy = particlesArray[i].y - particlesArray[j].y;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    if (distance < 190) {\n                        ctx.beginPath();\n                        ctx.strokeStyle = particlesArray[i].color;\n                        ctx.lineWidth = particlesArray[i].size / 10;\n                        ctx.moveTo(particlesArray[i].x, particlesArray[i].y);\n                        ctx.lineTo(particlesArray[j].x, particlesArray[j].y);\n                        ctx.stroke();\n                    }\n                }\n                if (particlesArray[i].size <= 0.3) {\n                    particlesArray.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <div className=\"Canvas\">\n                <canvas id=\"canvas1\"></canvas>\n            </div>\n        );\n    }\n}\n\nexport default Canvas;\n","import \"./App.css\";\nimport Canvas from \"./Canvas\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Canvas></Canvas>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}